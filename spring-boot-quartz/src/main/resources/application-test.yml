server:
  port:  ${random.int[10000,19999]}
spring:
  application:
    name: quartz-test
  datasource:
    master:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url:  jdbc:mysql://xxxx:3306/quartz?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=GMT%2B8
      username: root
      password: 123456
      type: com.zaxxer.hikari.HikariDataSource
      platform: mysql
      hikari:
        minimum-idle: 5
        maximum-pool-size: 10
        idle-timeout: 600000
        auto-commit: true
        pool-name: MyHikariCP
        max-lifetime: 1800000
        connection-timeout: 30000
        connection-test-query: SELECT 1
    quartz:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url:  jdbc:mysql://xxxxx:3306/quartz?useSSL=false&useUnicode=true&characterEncoding=UTF-8
      username: root
      password: 123456
      type: com.zaxxer.hikari.HikariDataSource
      platform: mysql
      hikari:
        minimum-idle: 5
        maximum-pool-size: 10
        idle-timeout: 600000
        auto-commit: true
        pool-name: MyHikariCP
        max-lifetime: 1800000
        connection-timeout: 30000
        connection-test-query: SELECT 1
  # quartz 定时任务
  quartz:
    # Scheduler 名字。默认为 schedulerName
    #    scheduler-name: clusteredScheduler
    # 数据库存储
    job-store-type: jdbc
    # Quartz 是否自动启动
    auto-startup: true
    # 延迟 N 秒启动
    startup-delay: 0
    # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
    wait-for-jobs-to-complete-on-shutdown: true
    # 是否覆盖已有 Job 的配置
    overwrite-existing-jobs: false
    jdbc:
      # 初始化方式
      initialize-schema: always
    # 添加 Quartz Scheduler 附加属性，更多可以看 http://www.quartz-scheduler.org/documentation/2.4.0-SNAPSHOT/configuration.html 文档
    properties:
      org:
        quartz:
          scheduler:
            #默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段
            instanceId: AUTO
            #instanceName: clusteredScheduler #quartzScheduler
          # JobStore 相关配置
          jobStore:
            # 数据源名称
            dataSource: quartzDataSource
            # 持久化配置
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            #我们仅为数据库制作了特定于数据库的代理
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            # 以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题
            useProperties: false
            #数据库表前缀
            tablePrefix: qrtz_
            #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
            misfireThreshold: 60000
            #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。
            clusterCheckinInterval: 5000
            #打开群集功能
            isClustered: true

